#!/bin/bash

CMD=$1
ID=$(find .vagrant -name id -exec cat {} \;)

function do_help {
  cat << EOF

vm usage:

  list - List snapshot
  snap - Take a snapshot
  ssh - SSH into the virtual machine
  restore - Restore the named snapshot

EOF
}

case ${CMD} in
  running)
    vboxmanage list runningvms
    ;;
  ls|list)
    vboxmanage snapshot ${ID} list    
    ;;
  snap|shapshot)
    echo -n "Snapshot name: "
    if [ -z $2 ]; then
        read prefix
        NAME="${prefix}-$(date +%Y%m%d-%H%M%S)"
    else
        NAME=$2
    fi
    echo $NAME
    vboxmanage snapshot ${ID} take "${NAME}" --live
    echo "${NAME}" > current.dat
    ;;
  sftp)
    IDENTITY=$(find . -name private_key)
    PORT=$(vboxmanage showvminfo ${ID} --machinereadable | grep ',22"' |cut -d',' -f4)
    sftp -i ${IDENTITY} -o UserKnownHostsFile=False -o StrictHostKeyChecking=no -o Port=${PORT} ${USERNAME-vagrant}@localhost
    ;;
  ssh)
    IDENTITY=$(find . -name private_key)
    PORT=$(vboxmanage showvminfo ${ID} --machinereadable | grep ',22"' |cut -d',' -f4)
    ssh -i ${IDENTITY} -o UserKnownHostsFile=False -o StrictHostKeyChecking=no -l ${USERNAME-vagrant} -p ${PORT} localhost
    ;;
  restore|revert)
    if [ -z $2 ]; then
      read TARGET
    else
      TARGET=$2
    fi
    echo "Restoring $TARGET"
    echo "Powering off ${ID}"
    vboxmanage controlvm ${ID} poweroff
    vboxmanage snapshot ${ID} restore "${TARGET}"
    vboxmanage startvm ${ID} --type headless
    ;;
  up|start)
    vagrant up
    ;;
  halt|stop)
    vagrant halt
    ;;
  destroy)
    vagrant destroy
    ;;
  *)
    do_help
    ;;
esac
